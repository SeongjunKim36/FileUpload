{"openapi":"3.1.0","servers":[{"url":"http://localhost:3000","description":"Local Server"}],"info":{"title":"File Upload API","version":"1.0.0","description":"File Upload Service API Documentation","license":{"name":"MIT"}},"paths":{"/":{"get":{"tags":["helloworld"],"parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"string"}}}}},"x-samchon-accessor":["getHello"],"x-samchon-controller":"AppController"}},"/healthcheck":{"get":{"tags":["helloworld"],"parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthCheckResult"}}}}},"x-samchon-accessor":["healthcheck","healthCheck"],"x-samchon-controller":"AppController"}},"/files/upload":{"post":{"tags":[],"parameters":[],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/IFileUpload"}}},"required":true},"responses":{"201":{"description":"","content":{"application/json":{}}}},"x-samchon-accessor":["files","upload","uploadFile"],"x-samchon-controller":"FilesController"}},"/files/{id}/info":{"get":{"tags":[],"parameters":[{"name":"id","in":"path","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileMetadata"}}}}},"x-samchon-accessor":["files","info","getFileInfo"],"x-samchon-controller":"FilesController"}},"/files/{id}/download":{"get":{"tags":[],"parameters":[{"name":"id","in":"path","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"stream":{"$ref":"#/components/schemas/stream.internal.Readable"},"headers":{"type":"object","properties":{"Content-Type":{"type":"string"},"Content-Disposition":{"type":"string"},"Content-Length":{"type":"number"}},"required":["Content-Type","Content-Disposition","Content-Length"]}},"required":["stream","headers"]}}}}},"x-samchon-accessor":["files","download","downloadFile"],"x-samchon-controller":"FilesController"}},"/users":{"post":{"tags":["Users"],"parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRegisterDto"}}},"required":true},"responses":{"201":{"description":"","content":{"application/json":{"schema":{}}}}},"x-samchon-accessor":["users","createUser"],"x-samchon-controller":"UsersController"},"get":{"tags":["Users"],"parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}}},"x-samchon-accessor":["users","findUsers"],"x-samchon-controller":"UsersController"}},"/users/{id}":{"put":{"tags":["Users"],"parameters":[{"name":"id","in":"path","schema":{"type":"string"},"required":true}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}},"required":true},"responses":{"200":{"description":"","content":{"application/json":{"schema":{}}}}},"x-samchon-accessor":["users","updateUser"],"x-samchon-controller":"UsersController"},"delete":{"tags":["Users"],"parameters":[{"name":"id","in":"path","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{}}}}},"x-samchon-accessor":["users","deleteUser"],"x-samchon-controller":"UsersController"},"get":{"tags":["Users"],"parameters":[{"name":"id","in":"path","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}}},"x-samchon-accessor":["users","findOneUser"],"x-samchon-controller":"UsersController"}}},"components":{"schemas":{"HealthCheckResult":{"type":"object","properties":{"status":{"oneOf":[{"const":"error"},{"const":"ok"},{"const":"shutting_down"}],"description":"The overall status of the Health Check"},"info":{"$ref":"#/components/schemas/HealthIndicatorResult","description":"The info object contains information of each health indicator\nwhich is of status \"up\""},"error":{"$ref":"#/components/schemas/HealthIndicatorResult","description":"The error object contains information of each health indicator\nwhich is of status \"down\""},"details":{"$ref":"#/components/schemas/HealthIndicatorResult","title":"The details object contains information of every health indicator","description":"The details object contains information of every health indicator."}},"required":["status","details"],"description":"The result of a health check"},"HealthIndicatorResult":{"type":"object","properties":{},"required":[],"description":"The result object of a health indicator","additionalProperties":{"type":"object","properties":{"status":{"oneOf":[{"const":"up"},{"const":"down"}],"description":"The status if the given health indicator was successful or not"}},"required":["status"],"additionalProperties":{}}},"IFileUpload":{"type":"object","properties":{"files":{"type":"string","format":"binary"},"storageType":{"oneOf":[{"const":"local"},{"const":"s3"}]}},"required":["files","storageType"]},"FileMetadata":{"type":"object","properties":{"id":{"type":"string"},"originalName":{"type":"string"},"mimeType":{"type":"string"},"size":{"type":"number"},"storageLocation":{"type":"string"},"path":{"type":"string"},"width":{"type":"number"},"height":{"type":"number"},"duration":{"type":"number"},"uploadDate":{"type":"string","format":"date-time"}},"required":["id","originalName","mimeType","size","storageLocation","path","uploadDate"]},"stream.internal.Readable":{"type":"object","properties":{"readableAborted":{"type":"boolean","title":"Returns whether the stream was destroyed or errored before emitting `'end'`","description":"Returns whether the stream was destroyed or errored before emitting `'end'`."},"readable":{"type":"boolean","description":"Is `true` if it is safe to call `readable.read()`, which means\nthe stream has not been destroyed or emitted `'error'` or `'end'`."},"readableDidRead":{"type":"boolean","title":"Returns whether `'data'` has been emitted","description":"Returns whether `'data'` has been emitted."},"readableEncoding":{"oneOf":[{"type":"null"},{"const":"ascii"},{"const":"utf8"},{"const":"utf-8"},{"const":"utf16le"},{"const":"ucs2"},{"const":"ucs-2"},{"const":"base64"},{"const":"base64url"},{"const":"latin1"},{"const":"binary"},{"const":"hex"}],"title":"Getter for the property `encoding` of a given `Readable` stream. The `encoding`property can be set using the `readable.setEncoding()` method","description":"Getter for the property `encoding` of a given `Readable` stream. The `encoding`property can be set using the `readable.setEncoding()` method."},"readableEnded":{"type":"boolean","title":"Becomes `true` when `'end'` event is emitted","description":"Becomes `true` when `'end'` event is emitted."},"readableFlowing":{"oneOf":[{"type":"null"},{"type":"boolean"}],"description":"This property reflects the current state of a `Readable` stream as described\nin the `Three states` section."},"readableHighWaterMark":{"type":"number","title":"Returns the value of `highWaterMark` passed when creating this `Readable`","description":"Returns the value of `highWaterMark` passed when creating this `Readable`."},"readableLength":{"type":"number","description":"This property contains the number of bytes (or objects) in the queue\nready to be read. The value provides introspection data regarding\nthe status of the `highWaterMark`."},"readableObjectMode":{"type":"boolean","title":"Getter for the property `objectMode` of a given `Readable` stream","description":"Getter for the property `objectMode` of a given `Readable` stream."},"destroyed":{"type":"boolean","title":"Is `true` after `readable.destroy()` has been called","description":"Is `true` after `readable.destroy()` has been called."}},"required":["readableAborted","readable","readableDidRead","readableEncoding","readableEnded","readableFlowing","readableHighWaterMark","readableLength","readableObjectMode","destroyed"]},"UserRegisterDto":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"}},"required":["firstName","lastName","email"]},"UserDto":{"type":"object","properties":{"id":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["id","firstName","lastName","email","createdAt","updatedAt"]}}},"tags":[{"name":"helloworld"},{"name":"Users"}],"x-samchon-emended":true}